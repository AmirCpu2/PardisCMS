// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Pardis.WebApp.Areas.SalesManagement.Controllers
{
    public partial class SalesFolderController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SalesFolderController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SalesFolderController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Detail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Detail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DetailOnTopPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailOnTopPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ShowGrid()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ShowGrid);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetAllSalesFolderByProductId()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAllSalesFolderByProductId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult PardisJson()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.PardisJson);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SalesFolderController Actions { get { return MVC.SalesManagement.SalesFolder; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "SalesManagement";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "SalesFolder";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "SalesFolder";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Detail = "Detail";
            public readonly string DetailOnTopPage = "DetailOnTopPage";
            public readonly string ShowGrid = "ShowGrid";
            public readonly string AddOrUpdate = "AddOrUpdate";
            public readonly string GetAllSalesFolderByProductId = "GetAllSalesFolderByProductId";
            public readonly string GetAllSalesFolder = "GetAllSalesFolder";
            public readonly string PardisJson = "PardisJson";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Detail = "Detail";
            public const string DetailOnTopPage = "DetailOnTopPage";
            public const string ShowGrid = "ShowGrid";
            public const string AddOrUpdate = "AddOrUpdate";
            public const string GetAllSalesFolderByProductId = "GetAllSalesFolderByProductId";
            public const string GetAllSalesFolder = "GetAllSalesFolder";
            public const string PardisJson = "PardisJson";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Detail s_params_Detail = new ActionParamsClass_Detail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Detail DetailParams { get { return s_params_Detail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Detail
        {
            public readonly string id = "id";
            public readonly string onTopForm = "onTopForm";
        }
        static readonly ActionParamsClass_DetailOnTopPage s_params_DetailOnTopPage = new ActionParamsClass_DetailOnTopPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DetailOnTopPage DetailOnTopPageParams { get { return s_params_DetailOnTopPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DetailOnTopPage
        {
            public readonly string folderId = "folderId";
        }
        static readonly ActionParamsClass_ShowGrid s_params_ShowGrid = new ActionParamsClass_ShowGrid();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShowGrid ShowGridParams { get { return s_params_ShowGrid; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShowGrid
        {
            public readonly string sidx = "sidx";
            public readonly string sort = "sort";
            public readonly string page = "page";
            public readonly string rows = "rows";
        }
        static readonly ActionParamsClass_AddOrUpdate s_params_AddOrUpdate = new ActionParamsClass_AddOrUpdate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddOrUpdate AddOrUpdateParams { get { return s_params_AddOrUpdate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddOrUpdate
        {
            public readonly string id = "id";
            public readonly string entity = "entity";
        }
        static readonly ActionParamsClass_GetAllSalesFolderByProductId s_params_GetAllSalesFolderByProductId = new ActionParamsClass_GetAllSalesFolderByProductId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllSalesFolderByProductId GetAllSalesFolderByProductIdParams { get { return s_params_GetAllSalesFolderByProductId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllSalesFolderByProductId
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_PardisJson s_params_PardisJson = new ActionParamsClass_PardisJson();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PardisJson PardisJsonParams { get { return s_params_PardisJson; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PardisJson
        {
            public readonly string item = "item";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DetailOnTopPage = "_DetailOnTopPage";
                public readonly string AddOrUpdate = "AddOrUpdate";
                public readonly string Detail = "Detail";
                public readonly string Index = "Index";
            }
            public readonly string _DetailOnTopPage = "~/Areas/SalesManagement/Views/SalesFolder/_DetailOnTopPage.cshtml";
            public readonly string AddOrUpdate = "~/Areas/SalesManagement/Views/SalesFolder/AddOrUpdate.cshtml";
            public readonly string Detail = "~/Areas/SalesManagement/Views/SalesFolder/Detail.cshtml";
            public readonly string Index = "~/Areas/SalesManagement/Views/SalesFolder/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SalesFolderController : Pardis.WebApp.Areas.SalesManagement.Controllers.SalesFolderController
    {
        public T4MVC_SalesFolderController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            IndexOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool onTopForm);

        [NonAction]
        public override System.Web.Mvc.ActionResult Detail(int id, bool onTopForm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Detail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "onTopForm", onTopForm);
            DetailOverride(callInfo, id, onTopForm);
            return callInfo;
        }

        [NonAction]
        partial void DetailOnTopPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int folderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DetailOnTopPage(int folderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailOnTopPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "folderId", folderId);
            DetailOnTopPageOverride(callInfo, folderId);
            return callInfo;
        }

        [NonAction]
        partial void ShowGridOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string sidx, string sort, int page, int rows);

        [NonAction]
        public override System.Web.Mvc.JsonResult ShowGrid(string sidx, string sort, int page, int rows)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ShowGrid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sidx", sidx);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sort", sort);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "rows", rows);
            ShowGridOverride(callInfo, sidx, sort, page, rows);
            return callInfo;
        }

        [NonAction]
        partial void AddOrUpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddOrUpdate(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddOrUpdate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AddOrUpdateOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AddOrUpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Pardis.Product.BLL.ViewModel.SalesFolder entity);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddOrUpdate(Pardis.Product.BLL.ViewModel.SalesFolder entity)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddOrUpdate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "entity", entity);
            AddOrUpdateOverride(callInfo, entity);
            return callInfo;
        }

        [NonAction]
        partial void GetAllSalesFolderByProductIdOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAllSalesFolderByProductId(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAllSalesFolderByProductId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetAllSalesFolderByProductIdOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetAllSalesFolderOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAllSalesFolder()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAllSalesFolder);
            GetAllSalesFolderOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PardisJsonOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object item);

        [NonAction]
        public override System.Web.Mvc.JsonResult PardisJson(object item)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.PardisJson);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "item", item);
            PardisJsonOverride(callInfo, item);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
